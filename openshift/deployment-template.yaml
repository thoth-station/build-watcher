apiVersion: v1
kind: Template
metadata:
  name: thoth-build-watcher-deployment
  annotations:
    description: This is Thoth - Build Watcher
    openshift.io/display-name: 'Thoth Core: Build Watcher'
    version: 0.1.0
    tags: poc,thoth,build-watcher,ai-stacks,aistacks
    template.openshift.io/documentation-url: https://github.com/Thoth-Station/
    template.openshift.io/long-description: >
      This template defines resources needed to deploy Thoth Build
      Watcher on OpenShift.
    template.openshift.io/provider-display-name: Red Hat, Inc.
    thoth-station.ninja/template-version: 0.1.0
  labels:
    template: thoth-build-watcher-deployment
    app: thoth
    component: thoth-build-watcher

parameters:
  - description: Tag of the ImageStream to use
    displayName: ImageStream Tag
    required: true
    name: IMAGE_STREAM_TAG
    value: 'latest'

  - description: Namespace on which Build Watcher should listen to builds.
    displayName: Build Watcher namespace
    required: true
    name: THOTH_WATCHED_NAMESPACE

  - name: THOTH_ENVIRONMENT_TYPE
    description: Type of images (runtime or buildtime) sent to image analysis to Thoth.
    displayName: Environment type
    required: true
    value: "runtime"

  - name: THOTH_NO_TLS_VERIFY
    description: Do not perform TLS verification when communicating with Thoth User API.
    displayName: No TLS verify for User API
    value: "0"

  - name: THOTH_NO_SOURCE_REGISTRY_TLS_VERIFY
    description: Do not perform TLS verification when pulling images on Thoth side.
    displayName: No TLS verify for Container registry
    value: "0"

  - name: THOTH_NO_DESTINATION_REGISTRY_TLS_VERIFY
    description: Do not perform TLS verification when pushing to a remote push registry..
    displayName: No TLS verify for Container registry
    value: "0"

  - name: THOTH_USER_API_HOST
    description: Host to Thoth's User API where images should be submitted for analysis.
    displayName: Thoth User API host
    required: true

  - name: THAMOS_DISABLE_TLS_WARNING
    description: Disable TLS warnings issues by Thamos when communicating with Thoth User API without TLS.
    displayName: Thamos disable TLS warning
    value: "0"

  - name: THOTH_PUSH_REGISTRY
    description: External registry to be used to pushing images to before analyzing them.
    displayName: External push registry.
    required: false

  - name: THOTH_ANALYZE_EXISTING
    description: Query for existing images built and submit them to Thoth for analysis.
    displayName: Analyze exising images.
    required: false
    value: "1"

  - name: THOTH_BUILD_WATCHER_WORKERS
    description: Number of workers pushing images to an external registry and submitting image analysis in parallel.
    displayName: Number of workers.
    required: false
    value: "1"

  - name: THOTH_SRC_REGISTRY_USER
    description: Source registry user.
    displayName: Source registry user.
    required: false

  - name: THOTH_SRC_REGISTRY_PASSWORD
    description: Source registry password.
    displayName: Source registry password.
    required: false

  - name: THOTH_DST_REGISTRY_USER
    description: Destination registry user.
    displayName: Destination registry user.
    required: false

  - name: THOTH_DST_REGISTRY_PASSWORD
    description: Destination registry password.
    displayName: Destination registry password.
    required: false

  - name: THOTH_PASS_TOKEN
    description: Pass token from service account when communicating with registry.
    displayName: Pass token from service account
    value: "0"

  - name: THOTH_BUILD_ANALYSIS_NO_BASE_IMAGE
    description: Do not submit base image to remote for container image analysis.
    displayName: No base image analysis
    value: "0"

  - name: THOTH_BUILD_ANALYSIS_NO_BUILD_LOG
    description: Do not submit build log to remote for analysis.
    displayName: No build log analysis
    value: "0"

  - name: THOTH_BUILD_ANALYSIS_NO_OUTPUT_IMAGE
    description: Do not submit output image to remote for container image analysis.
    displayName: No output image analysis
    value: "0"

  - name: THOTH_INFRA_NAMESPACE
    description: Namespace in which Build Watcher image is build.
    displayName: Thoth infra namespace
    required: true

  - name: THOTH_LOGGING_NO_JSON
    description: Do not log structured JSON logs.
    displayName: Turn off structured logs.
    value: "0"

objects:
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      annotations:
        thoth-station.ninja/template-version: 0.1.0
      labels:
        app: thoth
        component: thoth-build-watcher
      name: "build-watcher-${THOTH_WATCHED_NAMESPACE}"
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            app: thoth
            component: thoth-build-watcher
        spec:
          serviceAccountName: "build-watcher-${THOTH_WATCHED_NAMESPACE}"
          containers:
            - name: build-watcher
              env:
                - name: KUBERNETES_API_URL
                  value: 'https://kubernetes.default.svc.cluster.local'
                - name: KUBERNETES_VERIFY_TLS
                  value: "0"
                - name: THOTH_WATCHED_NAMESPACE
                  value: "${THOTH_WATCHED_NAMESPACE}"
                - name: THOTH_ENVIRONMENT_TYPE
                  value: "${THOTH_ENVIRONMENT_TYPE}"
                - name: THOTH_PUSH_REGISTRY
                  value: "${THOTH_PUSH_REGISTRY}"
                - name: THOTH_LOG_BUILD_WATCHER
                  value: INFO
                - name: THOTH_LOGGING_NO_JSON
                  value: "${THOTH_LOGGING_NO_JSON}"
                - name: THOTH_ERROR_FALLBACK
                  value: "1"
                - name: THOTH_LOGGING_NO_JSON
                  value: "${THOTH_LOGGING_NO_JSON}"
                - name: THOTH_USER_API_HOST
                  value: "${THOTH_USER_API_HOST}"
                - name: THOTH_NO_TLS_VERIFY
                  value: "${THOTH_NO_TLS_VERIFY}"
                - name: THOTH_ANALYZE_EXISTING
                  value: "${THOTH_ANALYZE_EXISTING}"
                - name: THOTH_BUILD_WATCHER_WORKERS
                  value: "${THOTH_BUILD_WATCHER_WORKERS}"
                - name: THOTH_NO_SOURCE_REGISTRY_TLS_VERIFY
                  value: "${THOTH_NO_SOURCE_REGISTRY_TLS_VERIFY}"
                - name: THOTH_NO_DESTINATION_REGISTRY_TLS_VERIFY
                  value: "${THOTH_NO_DESTINATION_REGISTRY_TLS_VERIFY}"
                  # If you watch for in-cluster builds, keep pass-token and have view rights assigned in
                  # service account.
                - name: THOTH_PASS_TOKEN
                  value: "${THOTH_PASS_TOKEN}"
                  # If you would like to analyze images pushed to external registry (transparent to build-watcher),
                  # provide credentials:
                - name: THOTH_SRC_REGISTRY_USER
                  value: "${THOTH_SRC_REGISTRY_USER}"
                - name: THOTH_SRC_REGISTRY_PASSWORD
                  value: "${THOTH_SRC_REGISTRY_PASSWORD}"
                - name: THOTH_DST_REGISTRY_USER
                  value: "${THOTH_DST_REGISTRY_USER}"
                - name: THOTH_DST_REGISTRY_PASSWORD
                  value: "${THOTH_DST_REGISTRY_PASSWORD}"
                # Set to a non-zero value to suppres annoying TLS warnings by Thamos lib:
                - name: THOTH_BUILD_ANALYSIS_NO_BASE_IMAGE
                  value: "${THOTH_BUILD_ANALYSIS_NO_BASE_IMAGE}"
                - name: THOTH_BUILD_ANALYSIS_NO_BUILD_LOG
                  value: "${HOTH_BUILD_ANALYSIS_NO_BUILD_LOG}"
                - name: THOTH_BUILD_ANALYSIS_NO_OUTPUT_IMAGE
                  value: "${THOTH_BUILD_ANALYSIS_NO_OUTPUT_IMAGE}"
                - name: THAMOS_DISABLE_TLS_WARNING
                  value: "${THAMOS_DISABLE_TLS_WARNING}"
                - name: PROMETHEUS_PUSHGATEWAY_HOST
                  valueFrom:
                    configMapKeyRef:
                      key: prometheus-pushgateway-host
                      name: thoth-build-watcher
                - name: PROMETHEUS_PUSHGATEWAY_PORT
                  valueFrom:
                    configMapKeyRef:
                      name: thoth-build-watcher
                      key: prometheus-pushgateway-port
                - name: SENTRY_DSN
                  valueFrom:
                    configMapKeyRef:
                      name: thoth-build-watcher
                      key: sentry-dsn
                - name: THOTH_DEPLOYMENT_NAME
                  valueFrom:
                    configMapKeyRef:
                      key: deployment-name
                      name: thoth-build-watcher
              livenessProbe:
                failureThreshold: 1
                tcpSocket:
                  port: 80
                initialDelaySeconds: 1800
              resources:
                requests:
                  memory: "384Mi"
                  cpu: "250m"
                limits:
                  memory: "384Mi"
                  cpu: "250m"
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - build-watcher
            from:
              kind: ImageStreamTag
              name: 'thoth-build-watcher:${IMAGE_STREAM_TAG}'
              namespace: '${THOTH_INFRA_NAMESPACE}'
